// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/calendar/calendar.proto

package pkg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	EventDate            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=eventDate,proto3" json:"eventDate,omitempty"`
	Id                   string               `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetEventDate() *timestamp.Timestamp {
	if m != nil {
		return m.EventDate
	}
	return nil
}

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EventsList struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsList) Reset()         { *m = EventsList{} }
func (m *EventsList) String() string { return proto.CompactTextString(m) }
func (*EventsList) ProtoMessage()    {}
func (*EventsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{1}
}

func (m *EventsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsList.Unmarshal(m, b)
}
func (m *EventsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsList.Marshal(b, m, deterministic)
}
func (m *EventsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsList.Merge(m, src)
}
func (m *EventsList) XXX_Size() int {
	return xxx_messageInfo_EventsList.Size(m)
}
func (m *EventsList) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsList.DiscardUnknown(m)
}

var xxx_messageInfo_EventsList proto.InternalMessageInfo

func (m *EventsList) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type DeleteEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEvent) Reset()         { *m = DeleteEvent{} }
func (m *DeleteEvent) String() string { return proto.CompactTextString(m) }
func (*DeleteEvent) ProtoMessage()    {}
func (*DeleteEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{2}
}

func (m *DeleteEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEvent.Unmarshal(m, b)
}
func (m *DeleteEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEvent.Marshal(b, m, deterministic)
}
func (m *DeleteEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEvent.Merge(m, src)
}
func (m *DeleteEvent) XXX_Size() int {
	return xxx_messageInfo_DeleteEvent.Size(m)
}
func (m *DeleteEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEvent proto.InternalMessageInfo

func (m *DeleteEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ChangeEvent struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Args                 map[string]string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChangeEvent) Reset()         { *m = ChangeEvent{} }
func (m *ChangeEvent) String() string { return proto.CompactTextString(m) }
func (*ChangeEvent) ProtoMessage()    {}
func (*ChangeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{3}
}

func (m *ChangeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeEvent.Unmarshal(m, b)
}
func (m *ChangeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeEvent.Marshal(b, m, deterministic)
}
func (m *ChangeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeEvent.Merge(m, src)
}
func (m *ChangeEvent) XXX_Size() int {
	return xxx_messageInfo_ChangeEvent.Size(m)
}
func (m *ChangeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeEvent proto.InternalMessageInfo

func (m *ChangeEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangeEvent) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

type GetEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEvent) Reset()         { *m = GetEvent{} }
func (m *GetEvent) String() string { return proto.CompactTextString(m) }
func (*GetEvent) ProtoMessage()    {}
func (*GetEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{4}
}

func (m *GetEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEvent.Unmarshal(m, b)
}
func (m *GetEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEvent.Marshal(b, m, deterministic)
}
func (m *GetEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEvent.Merge(m, src)
}
func (m *GetEvent) XXX_Size() int {
	return xxx_messageInfo_GetEvent.Size(m)
}
func (m *GetEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GetEvent proto.InternalMessageInfo

func (m *GetEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateEventResponse struct {
	EventID              string   `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventResponse) Reset()         { *m = CreateEventResponse{} }
func (m *CreateEventResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEventResponse) ProtoMessage()    {}
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{5}
}

func (m *CreateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventResponse.Unmarshal(m, b)
}
func (m *CreateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventResponse.Marshal(b, m, deterministic)
}
func (m *CreateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventResponse.Merge(m, src)
}
func (m *CreateEventResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEventResponse.Size(m)
}
func (m *CreateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventResponse proto.InternalMessageInfo

func (m *CreateEventResponse) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *CreateEventResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChangeEventResponse struct {
	EventID              string   `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeEventResponse) Reset()         { *m = ChangeEventResponse{} }
func (m *ChangeEventResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeEventResponse) ProtoMessage()    {}
func (*ChangeEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{6}
}

func (m *ChangeEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeEventResponse.Unmarshal(m, b)
}
func (m *ChangeEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeEventResponse.Marshal(b, m, deterministic)
}
func (m *ChangeEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeEventResponse.Merge(m, src)
}
func (m *ChangeEventResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeEventResponse.Size(m)
}
func (m *ChangeEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeEventResponse proto.InternalMessageInfo

func (m *ChangeEventResponse) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *ChangeEventResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteEventResponse struct {
	EventID              string   `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventResponse) Reset()         { *m = DeleteEventResponse{} }
func (m *DeleteEventResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteEventResponse) ProtoMessage()    {}
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_90745492d3a2477e, []int{7}
}

func (m *DeleteEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventResponse.Unmarshal(m, b)
}
func (m *DeleteEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventResponse.Marshal(b, m, deterministic)
}
func (m *DeleteEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventResponse.Merge(m, src)
}
func (m *DeleteEventResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteEventResponse.Size(m)
}
func (m *DeleteEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventResponse proto.InternalMessageInfo

func (m *DeleteEventResponse) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *DeleteEventResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Event)(nil), "api.calendar.Event")
	proto.RegisterType((*EventsList)(nil), "api.calendar.EventsList")
	proto.RegisterType((*DeleteEvent)(nil), "api.calendar.DeleteEvent")
	proto.RegisterType((*ChangeEvent)(nil), "api.calendar.ChangeEvent")
	proto.RegisterMapType((map[string]string)(nil), "api.calendar.ChangeEvent.ArgsEntry")
	proto.RegisterType((*GetEvent)(nil), "api.calendar.GetEvent")
	proto.RegisterType((*CreateEventResponse)(nil), "api.calendar.CreateEventResponse")
	proto.RegisterType((*ChangeEventResponse)(nil), "api.calendar.ChangeEventResponse")
	proto.RegisterType((*DeleteEventResponse)(nil), "api.calendar.DeleteEventResponse")
}

func init() { proto.RegisterFile("api/calendar/calendar.proto", fileDescriptor_90745492d3a2477e) }

var fileDescriptor_90745492d3a2477e = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x41, 0x6b, 0xdb, 0x30,
	0x14, 0xc6, 0x4e, 0xda, 0x25, 0xcf, 0xa5, 0x0c, 0x75, 0x14, 0xd7, 0x65, 0x2c, 0xcb, 0x2e, 0x81,
	0x81, 0x03, 0xd9, 0x21, 0xdd, 0x60, 0x87, 0x35, 0x09, 0xa3, 0x74, 0x27, 0xb3, 0xd3, 0x6e, 0x6a,
	0xfc, 0xa6, 0x89, 0xda, 0xb2, 0x90, 0xd4, 0x42, 0x7e, 0xc1, 0x8e, 0xfb, 0x8b, 0xfb, 0x29, 0xc3,
	0xb2, 0x95, 0x38, 0xa9, 0x76, 0xea, 0x4d, 0xd2, 0xfb, 0xbe, 0xef, 0xbd, 0xf7, 0x3d, 0x3d, 0xb8,
	0xa4, 0x92, 0x4f, 0xd7, 0xb4, 0x40, 0x91, 0x53, 0xb5, 0x3d, 0xa4, 0x52, 0x55, 0xa6, 0x22, 0x27,
	0x54, 0xf2, 0xd4, 0xbd, 0x25, 0x6f, 0x58, 0x55, 0xb1, 0x02, 0xa7, 0x36, 0x76, 0xf7, 0xf0, 0x73,
	0x6a, 0x78, 0x89, 0xda, 0xd0, 0x52, 0x36, 0xf0, 0xe4, 0xf2, 0x10, 0x80, 0xa5, 0x34, 0x9b, 0x26,
	0x38, 0xfe, 0x1d, 0xc0, 0xd1, 0xea, 0x11, 0x85, 0x21, 0x04, 0xfa, 0x82, 0x96, 0x18, 0x07, 0xa3,
	0x60, 0x32, 0xcc, 0xec, 0x99, 0x8c, 0x20, 0xca, 0x51, 0xaf, 0x15, 0x97, 0x86, 0x57, 0x22, 0x0e,
	0x6d, 0xa8, 0xfb, 0x44, 0xae, 0x60, 0x88, 0x35, 0x7d, 0x49, 0x0d, 0xc6, 0xbd, 0x51, 0x30, 0x89,
	0x66, 0x49, 0xda, 0x24, 0x4c, 0x5d, 0xc2, 0xf4, 0xbb, 0xab, 0x28, 0xdb, 0x81, 0xc9, 0x29, 0x84,
	0x3c, 0x8f, 0xfb, 0x56, 0x32, 0xe4, 0xf9, 0xf8, 0x23, 0x80, 0x2d, 0x44, 0x7f, 0xe3, 0xda, 0x90,
	0xf7, 0x70, 0x6c, 0xa1, 0x3a, 0x0e, 0x46, 0xbd, 0x49, 0x34, 0x3b, 0x4b, 0xbb, 0x4d, 0xa7, 0x16,
	0x99, 0xb5, 0x90, 0xf1, 0x6b, 0x88, 0x96, 0x58, 0xa0, 0xc1, 0xa6, 0x93, 0x46, 0x39, 0xd8, 0x2a,
	0xff, 0x09, 0x20, 0x5a, 0xfc, 0xa2, 0x82, 0xf9, 0xe3, 0x64, 0x0e, 0x7d, 0xaa, 0x98, 0x8e, 0x43,
	0x9b, 0xe9, 0xdd, 0x7e, 0xa6, 0x0e, 0x31, 0xfd, 0xa2, 0x98, 0x5e, 0x09, 0xa3, 0x36, 0x99, 0x25,
	0x24, 0x73, 0x18, 0x6e, 0x9f, 0xc8, 0x4b, 0xe8, 0xdd, 0xe3, 0xa6, 0x95, 0xad, 0x8f, 0xe4, 0x15,
	0x1c, 0x3d, 0xd2, 0xe2, 0x01, 0x5b, 0xdf, 0x9a, 0xcb, 0xa7, 0xf0, 0x2a, 0x18, 0x27, 0x30, 0xf8,
	0x8a, 0xc6, 0x5f, 0xed, 0x0d, 0x9c, 0x2d, 0x14, 0xd2, 0xb6, 0x99, 0x0c, 0xb5, 0xac, 0x84, 0x46,
	0x12, 0xc3, 0x0b, 0xdb, 0xed, 0xcd, 0xb2, 0xc5, 0xba, 0x6b, 0x1d, 0x29, 0x51, 0x6b, 0xca, 0x5c,
	0x22, 0x77, 0xb5, 0x52, 0xbb, 0xf2, 0x9f, 0x2b, 0xd5, 0xb1, 0xf8, 0x39, 0x52, 0xb3, 0xbf, 0x21,
	0x0c, 0x16, 0xad, 0xbd, 0xe4, 0x1a, 0x06, 0x34, 0xcf, 0x1b, 0x27, 0x7c, 0x33, 0x4e, 0xde, 0x1e,
	0x8c, 0xc3, 0x63, 0xcd, 0x6d, 0xfd, 0x4b, 0x77, 0xe3, 0xbf, 0xd8, 0x67, 0x74, 0xca, 0x3e, 0x14,
	0xf3, 0x75, 0x74, 0x0b, 0xd1, 0xba, 0xf3, 0x57, 0x2e, 0xfe, 0xfb, 0x1b, 0x9e, 0x54, 0xe6, 0x71,
	0x7a, 0x0e, 0x03, 0xe6, 0xe6, 0x7c, 0xbe, 0x0f, 0x77, 0xf3, 0x4f, 0x7c, 0x5d, 0x93, 0xcf, 0x30,
	0x74, 0x44, 0x4d, 0xce, 0x9f, 0x2c, 0xd4, 0xaa, 0xde, 0xe0, 0x24, 0xf6, 0x30, 0xed, 0xf6, 0x5c,
	0x9f, 0xfe, 0x38, 0xe1, 0xc2, 0xa0, 0x12, 0xb4, 0x98, 0xca, 0x7b, 0x76, 0x77, 0x6c, 0x99, 0x1f,
	0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x64, 0x17, 0x92, 0xff, 0x57, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*CreateEventResponse, error)
	DeleteEvent(ctx context.Context, in *DeleteEvent, opts ...grpc.CallOption) (*DeleteEventResponse, error)
	ChangeEvent(ctx context.Context, in *ChangeEvent, opts ...grpc.CallOption) (*ChangeEventResponse, error)
	GetEvent(ctx context.Context, in *GetEvent, opts ...grpc.CallOption) (*Event, error)
	GetEvents(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EventsList, error)
}

type calendarClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarClient(cc grpc.ClientConnInterface) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*CreateEventResponse, error) {
	out := new(CreateEventResponse)
	err := c.cc.Invoke(ctx, "/api.calendar.Calendar/addEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) DeleteEvent(ctx context.Context, in *DeleteEvent, opts ...grpc.CallOption) (*DeleteEventResponse, error) {
	out := new(DeleteEventResponse)
	err := c.cc.Invoke(ctx, "/api.calendar.Calendar/deleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) ChangeEvent(ctx context.Context, in *ChangeEvent, opts ...grpc.CallOption) (*ChangeEventResponse, error) {
	out := new(ChangeEventResponse)
	err := c.cc.Invoke(ctx, "/api.calendar.Calendar/changeEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetEvent(ctx context.Context, in *GetEvent, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/api.calendar.Calendar/getEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetEvents(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EventsList, error) {
	out := new(EventsList)
	err := c.cc.Invoke(ctx, "/api.calendar.Calendar/getEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	AddEvent(context.Context, *Event) (*CreateEventResponse, error)
	DeleteEvent(context.Context, *DeleteEvent) (*DeleteEventResponse, error)
	ChangeEvent(context.Context, *ChangeEvent) (*ChangeEventResponse, error)
	GetEvent(context.Context, *GetEvent) (*Event, error)
	GetEvents(context.Context, *empty.Empty) (*EventsList, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) AddEvent(ctx context.Context, req *Event) (*CreateEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}
func (*UnimplementedCalendarServer) DeleteEvent(ctx context.Context, req *DeleteEvent) (*DeleteEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedCalendarServer) ChangeEvent(ctx context.Context, req *ChangeEvent) (*ChangeEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeEvent not implemented")
}
func (*UnimplementedCalendarServer) GetEvent(ctx context.Context, req *GetEvent) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedCalendarServer) GetEvents(ctx context.Context, req *empty.Empty) (*EventsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.calendar.Calendar/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).AddEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.calendar.Calendar/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).DeleteEvent(ctx, req.(*DeleteEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_ChangeEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).ChangeEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.calendar.Calendar/ChangeEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).ChangeEvent(ctx, req.(*ChangeEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.calendar.Calendar/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetEvent(ctx, req.(*GetEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.calendar.Calendar/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetEvents(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.calendar.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addEvent",
			Handler:    _Calendar_AddEvent_Handler,
		},
		{
			MethodName: "deleteEvent",
			Handler:    _Calendar_DeleteEvent_Handler,
		},
		{
			MethodName: "changeEvent",
			Handler:    _Calendar_ChangeEvent_Handler,
		},
		{
			MethodName: "getEvent",
			Handler:    _Calendar_GetEvent_Handler,
		},
		{
			MethodName: "getEvents",
			Handler:    _Calendar_GetEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/calendar/calendar.proto",
}
